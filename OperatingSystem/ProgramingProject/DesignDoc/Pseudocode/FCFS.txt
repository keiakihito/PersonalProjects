FCFS Pesudo code

/**
* The method simulate Fist Come First Serve(FCFS) scheduling algorithm
* @Param file jobList, the job list on the text file
* @Return double ataRslt, calculation result for Averatge Turnover Time
*/
1. Read file
2. Make a data frame with integer 2D array // Method A
3. Create a job completion table
4. Make an empty array for Average Turnover Time 
5. Record job completion // Method B
6. Display job completion table // Method C
7. Calculate Averatge Turnover Time // Method D
8. Dipaly the result.


//Method A
/**
* The method reads the text files and create 2D array
* Corresponding column 1:JobID, column2: rmnOfTime
* @Param file Object,  jobList which shows the job ID and  the remaining time
* @Return ArayList<Integer><Integer> dataFrm, simulate Table with 2 columns
*/
1. Create empty 2D array jobList 
2. Set loop which iteartes the data file until the end of files
3. 	Read current job id from the file object
4.  	Record the current job id on the data fram column 1
5.  	Read the job time
6.  	Record the job time on the data frae 2nd column 

//Method B
/**
* The method accepts 2D integer arraylist data Frme 
* It records the job process with anotehr 2D array 
* Corresponding column 1:JobID, column 2: Start Time, column 3: End Time, column 4: complete job ID
* @Param ArayList<Integer><Integer> dataFrm,  jobList which shows the job ID and  the remaining time
* @Return ArayList<Integer><Integer> jobRcrd,  job record which makes a work log until all the job is completed
*/
1. Set start time <- 0, and end time <- 0
2. Set loop where an iterator iteartes dataFrm and jobRcrd from the first JobID to the last JobId (Top to Bottom)
3. 	Read JobID from dataFrm
4. 	Record JobId on JobRcd 1st column // JobID
5. 	Record startTime on JobRcd 2nd column // startTime
6. 	Read JobTime from dataFrm
7. 	Calculate endTime <- startTime + JobTime
8. 	Record endTime on JobRcd 3rd column // End Time
9. 	Record JobID on JobRcd 4th column as a completed task // Complete JobID
10. 	Upate startTime <- endTime
11.  Move next row until the last JobId
12. Return jobRcrd



//Method C
/**
* The method accepts 2D integer arraylist JobRcd
* It prints the job process with anotehr 2D array table format  
* Corresponding column 1:JobID, column 2: Start Time, column 3: End Time, column 4: complete Job ID
* @Param ArayList<Integer><Integer> jobRcrd,  job record which makes a work log until all the job is completed
* @Return void
*/
1. Accept jobRcrd
2. Create string headColumns
3. Create string jobCompletion
4. Set loop where an iterator iterates JobRcd from the 1st row to the last row
5. 	Display the 1st column // JobID 
6. 	Display the 2nd column // Start Time
7. 	Display the 3rd coumn  // End Time
8.		Display the 4th column with the jobCompletion string // complete Job ID
9. 	Move to the nect row 


//Method D
/**
* The method reads jobRcd and calculates the Average Turnover Time
* @Param ArayList<Integer><Integer> jobRcrd,  job record which makes a work log 
* @Return double aveTrnovrTime, average turn over time. 
*/
1. Accept jobRcrd
2. Set Su <- 0
2. Set loop where the iterator iterates the jobRcrd's last column
3. 	Check the last column != 0
4. 	Read the same row column 3 // End Time 
5. 	Add sum += endTime
6. 	Move to the next row
7. Devide the Sum by the number of row
8. Return the restult 	